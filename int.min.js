var _0xc44d = [
  "\x70\x75\x73\x68",
  "\x66\x69\x6C\x74\x65\x72",
  "\x6C\x65\x6E\x67\x74\x68",
  "\x6E\x75\x6D",
  "\x72\x61\x6E\x64\x6F\x6D",
  "\x66\x6C\x6F\x6F\x72",
  "\x73\x68\x75\x66\x66\x6C\x65",
  "\x69\x6E\x64\x65\x78\x4F\x66",
];
const IntInstance = (_0xc840x2, _0xc840x3) => {
  _0xc840x2 = Number(_0xc840x2);
  _0xc840x3 = Number(_0xc840x3);
  let _0xc840x4 = [];
  for (let _0xc840x5 = _0xc840x2; _0xc840x5 <= _0xc840x3; _0xc840x5++) {
    _0xc840x4[_0xc44d[0]](_0xc840x5);
  }
  return {
    num: function () {
      _0xc840x4 = _0xc840x4[_0xc44d[1]]((_0xc840x6) => _0xc840x6);
      return _0xc840x4;
    },
    random: function (
      { shuffle, removeAfterRandom } = {
        shuffle: false,
        removeAfterRandom: false,
      }
    ) {
      if (this[_0xc44d[3]]()[_0xc44d[2]] <= 0) {
        return false;
      }
      if (this[_0xc44d[3]]()[_0xc44d[2]] <= 1) {
        let _0xc840x7 =
          this[_0xc44d[3]]()[Math[_0xc44d[5]](Math[_0xc44d[4]]())];
        _0xc840x4 = [];
        return _0xc840x7;
      }
      if (shuffle) {
        let _0xc840x8 = Math[_0xc44d[5]](
          Math[_0xc44d[4]]() * _0xc840x4[_0xc44d[2]]
        );
        let _0xc840x9 = this[_0xc44d[6]]()[_0xc840x8];
        if (removeAfterRandom) {
          let _0xc840xa = _0xc840x4[_0xc44d[7]](_0xc840x9);
          this[_0xc44d[3]]()[_0xc840xa] = undefined;
        }
        return _0xc840x9;
      }
      let _0xc840x8 = Math[_0xc44d[5]](
        Math[_0xc44d[4]]() * _0xc840x4[_0xc44d[2]]
      );
      let _0xc840x9 = this[_0xc44d[3]]()[_0xc840x8];
      if (removeAfterRandom) {
        let _0xc840xa = _0xc840x4[_0xc44d[7]](_0xc840x9);
        this[_0xc44d[3]]()[_0xc840xa] = undefined;
      }
      return _0xc840x9;
    },
    remove: function (_0xc840xb) {
      _0xc840xb = Number(_0xc840xb);
      if (_0xc840xb < _0xc840x2) {
        return;
      }
      if (_0xc840xb > _0xc840x3) {
        return;
      }
      _0xc840xb -= 1;
      _0xc840x4[_0xc840xb] = undefined;
      _0xc840x4 = _0xc840x4[_0xc44d[1]]((_0xc840x6) => _0xc840x6);
      return _0xc840x4;
    },
    shuffle: function () {
      let _0xc840xc = _0xc840x4[_0xc44d[2]],
        _0xc840xd;
      while (_0xc840xc !== 0) {
        _0xc840xd = Math[_0xc44d[5]](Math[_0xc44d[4]]() * _0xc840xc);
        _0xc840xc--;
        [_0xc840x4[_0xc840xc], _0xc840x4[_0xc840xd]] = [
          _0xc840x4[_0xc840xd],
          _0xc840x4[_0xc840xc],
        ];
      }
      return _0xc840x4;
    },
    getArr: function () {
      return _0xc840x4;
    },
  };
};
